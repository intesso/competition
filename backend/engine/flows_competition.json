[
    {
        "id": "b79a946966637772",
        "type": "tab",
        "label": "REST-server",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "version",
                "value": "0.0.1",
                "type": "str"
            }
        ]
    },
    {
        "id": "d5b708b9aa215a10",
        "type": "tab",
        "label": "flow-single-u12-speed-double-dutch",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "088f1c8f9d228725",
        "type": "subflow",
        "name": "prepare-calc",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "99e74a7c62587047",
        "type": "subflow",
        "name": "mapParam",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "809f072675aa7ae8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 450,
                "y": 80,
                "wires": [
                    {
                        "id": "809f072675aa7ae8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "paramName",
                "type": "str",
                "value": "count",
                "ui": {
                    "icon": "font-awesome/fa-paragraph",
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#D8BFD8",
        "inputLabels": [
            "msg"
        ],
        "outputLabels": [
            "msg"
        ]
    },
    {
        "id": "2302e75a80ce82b5",
        "type": "group",
        "z": "b79a946966637772",
        "name": "REST API Request/Response",
        "style": {
            "label": true
        },
        "nodes": [
            "bd45edf318a2751c",
            "6d9acaead57c3790",
            "7d2a7c1108ebedc2",
            "84da80740c41553b",
            "8fea72b89e0a03cf",
            "2946de5e71bd1ccc",
            "ce10b3db872ebd6c",
            "dc7585f452cba8b7",
            "49c59d47537cbaaf"
        ],
        "x": 94,
        "y": 59,
        "w": 1472,
        "h": 242
    },
    {
        "id": "809f072675aa7ae8",
        "type": "function",
        "z": "99e74a7c62587047",
        "name": "mapValues (count)",
        "func": "const inputs = msg.payload.inputs;\n\nconst values = []\nconst counts = inputs\n    .forEach((input) => {\n        input.parameters.forEach((param) => {\n            if (param.name === env.get('paramName')) {\n                values.push(param.value)\n            }\n        })\n    })\n\nmsg.calc = msg.calc || {};\nmsg.calc.values = values;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 80,
        "wires": [
            []
        ],
        "info": "map parameter values\n\nit maps the parameter value with the name ${parameterName} to the `msg.calc.values` array."
    },
    {
        "id": "bd45edf318a2751c",
        "type": "http response",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "statuscode-ok",
        "statusCode": "200",
        "headers": {},
        "x": 1400,
        "y": 100,
        "wires": []
    },
    {
        "id": "6d9acaead57c3790",
        "type": "http in",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "/engine/calculations",
        "url": "/engine/calculations",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "7d2a7c1108ebedc2",
                "84da80740c41553b"
            ]
        ]
    },
    {
        "id": "7d2a7c1108ebedc2",
        "type": "debug",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "debug-request",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 260,
        "wires": []
    },
    {
        "id": "84da80740c41553b",
        "type": "change",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "set-request-target",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "target",
                "pt": "msg",
                "to": "payload.calculationType",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "ce10b3db872ebd6c"
            ]
        ]
    },
    {
        "id": "8fea72b89e0a03cf",
        "type": "switch",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "jsonata_exp",
                "v": "$exists([msg.payload.code=\"OK\"])\t",
                "vt": "jsonata"
            },
            {
                "t": "jsonata_exp",
                "v": "$exists([msg.payload.code!=\"OK\"])",
                "vt": "jsonata"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 140,
        "wires": [
            [
                "bd45edf318a2751c"
            ],
            [
                "2946de5e71bd1ccc"
            ]
        ]
    },
    {
        "id": "2946de5e71bd1ccc",
        "type": "http response",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "statuscode-bad-request",
        "statusCode": "400",
        "headers": {},
        "x": 1430,
        "y": 180,
        "wires": []
    },
    {
        "id": "ce10b3db872ebd6c",
        "type": "link call",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "calculation-selector",
        "links": [],
        "linkType": "dynamic",
        "timeout": "3",
        "x": 710,
        "y": 140,
        "wires": [
            [
                "dc7585f452cba8b7"
            ]
        ]
    },
    {
        "id": "dc7585f452cba8b7",
        "type": "function",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "set-response",
        "func": "msg.payload = {\n    result: {\n        code: msg.code,\n        score: msg.score\n    },\n    meta: {\n        version: env.version,\n        time: Date.now(),\n        target: msg.target\n    },\n    inputs: msg.req.body\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 140,
        "wires": [
            [
                "8fea72b89e0a03cf",
                "49c59d47537cbaaf"
            ]
        ]
    },
    {
        "id": "49c59d47537cbaaf",
        "type": "debug",
        "z": "b79a946966637772",
        "g": "2302e75a80ce82b5",
        "name": "debug-response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 260,
        "wires": []
    },
    {
        "id": "660a082c2b8d5fe6",
        "type": "link in",
        "z": "d5b708b9aa215a10",
        "name": "single-u12-speed-double-dutch",
        "links": [],
        "x": 65,
        "y": 80,
        "wires": [
            [
                "79efcbceccb2657c"
            ]
        ]
    },
    {
        "id": "60a8cb787b6fbfc5",
        "type": "link out",
        "z": "d5b708b9aa215a10",
        "name": "link-out",
        "mode": "return",
        "links": [],
        "x": 1105,
        "y": 80,
        "wires": []
    },
    {
        "id": "c2dcd89c4e761772",
        "type": "change",
        "z": "d5b708b9aa215a10",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "code",
                "pt": "msg",
                "to": "OK",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "score",
                "pt": "msg",
                "to": "calc.avg",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 160,
        "wires": [
            [
                "60a8cb787b6fbfc5"
            ]
        ]
    },
    {
        "id": "f405fcf68d9c87f5",
        "type": "debug",
        "z": "d5b708b9aa215a10",
        "name": "debug-calc",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "calc",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 280,
        "wires": []
    },
    {
        "id": "8c5d5b9070c95879",
        "type": "function",
        "z": "d5b708b9aa215a10",
        "name": "calcMinMaxDiff",
        "func": "msg.calc = msg.calc || {};\nconst calc = msg.calc;\nmsg.calc.valuesSorted = [...msg.calc.values || []].sort((a, b) => a - b)\nconst elements = msg.calc.valuesSorted.length\n\ncalc.min = calc.valuesSorted[0];\ncalc.max = calc.valuesSorted[elements - 1];\ncalc.diff = Math.abs(calc.max - calc.min);\ncalc.avg = calc.valuesSorted.reduce((memo, value) => memo += value, 0) / elements\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 160,
        "wires": [
            [
                "334598baf98d7235",
                "c2dcd89c4e761772"
            ]
        ]
    },
    {
        "id": "334598baf98d7235",
        "type": "debug",
        "z": "d5b708b9aa215a10",
        "name": "debug-all",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 280,
        "wires": []
    },
    {
        "id": "79efcbceccb2657c",
        "type": "subflow:99e74a7c62587047",
        "z": "d5b708b9aa215a10",
        "name": "",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "f405fcf68d9c87f5",
                "8c5d5b9070c95879"
            ]
        ]
    }
]